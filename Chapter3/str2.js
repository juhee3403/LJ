
// 템플릿 문자열

// 값을 문자열 안에 써야하는 경우는 아주 많다.
// 이때 문자열 병합(concatenation)을 통해 변수나 상수를 문자열 안에 쓸 수 있다.

let currentTemp = 19.5;
// 00b0 온도를 나타내는 유니코드 코드포인트.
const message1 = "The current temperature is " + currentTemp + "\u00b0C";

// ES6 이전에는 변수나 상수를 문자열안에 쓰는 방법(외부 라이브러리를 사용하지 않으면)은 문자열 병합뿐이었다.
// ES6에서는 문자열 템플릿(template)이라는 기능을 도입.
// 이 기능을 문자열 채우기(interpolation)라 부르기도 한다.
// 문자열 템플릿은 문자열의 정해진 위치에 값을 채워 넣는 간편한 방법.
// 문자열 템플릿에는 큰따옴표나 작은따옴표를 쓰지 않고 백틱을 사용한다.

const message2 = `The current temperature is ${currentTemp}\u00b0C`;
// 문자열 템플릿 안에서는 달러 기호가 특수문자가 된다.
// 달러 기호 다음에 중괄호로 감싼 값을 쓰면 그 값이 문자열에 삽입된다.
// (문자열 템플릿 안에서 $를 써야 한다면, \로 이스케이프) 




// 여러 줄 문자열

// ES6 이전의 여러 줄 문자열 지원은 좋지 않았다(브라우저의 지원이 형편없었으므로).
// ES6에서는 이 기능이 좀 더 믿을 만하게 바뀌었지만, 아직은 조심해야 할 함점이 남아있다.
console.log("line\
line2");    // > lineline2
// 위의 역슬래시는 줄바꿈 문자를 이스케이프하긴 하지만, 문자열에 문자를 삽입하지는 않는다.
// 줄바꿈 문자가 들어가게 하고 싶으면 다음과 같이 써야 한다.
console.log("line\n\
line2");

// 만약 백틱을 쓰게 된다면?
console.log(`line
line2`);
// 줄바꿈 문자가 들어있지 않지만, 백틱을 사용하면 줄바꿈이 가능하다.

// 그렇지만, 함정도 있다!!!!
console.log(`line
    line2
line3`);
// 이렇게 출력을 하게 되면, line2의 앞에 있는 빈공백도 같이 출력이 된다.
// 그래서 들여쓰기를 못하게 되어, 코드를 쉽게 읽을 수 없게 될 수도 있다.

// 그러하여, 소스 코드에 문자열을 여러행 나누어 써야 할때 보편적으로 이렇게 쓴다.
console.log("line1\n" +
            "line2\n" +
            "line3");
// 위와 같이 사용하면, 들여쓰기가 사용가능해 읽기 쉽다.

// 당연히 백틱과 섞어 써도 된다.
console.log("Current temperature:\n" +
            `\t${currentTemp}\u00b0C\n` +
            "Don't worry... the heat is on!");
// 중간에 탬플릿 문자열을 넣기위해 백틱을 사용.




// 숫자와 문자열

// 숫자를 문자열 안에 넣으면, '숫자'가 아니라 '문자열'이 된다.
// 그런데, js는 필요에 따라 '숫자가 들어가 있는 문자열'을 '숫자'로 바꾸는 형변환이 일어난다.

console.log(3 + '30');  // 3이 문자열로 바뀌어, 결과는 문자열 '330'
console.log(3 * '30');  // '30'이 숫자열로 바뀌어, 결과는 숫자 90
// 그래서, 숫자가 필요할 땐 숫자를 쓰고(즉, 따옴표를 쓰지 말자),
// 문자열이 필요할 땐 문자열을 쓰자.
// 모호한 부분은 사용자 입력을 받을때 인데, 거의 항상 문자열로 들어오기 때문에
// 숫자가 필요할때는 임의로 내가 바꾸어 줘야 한다.
