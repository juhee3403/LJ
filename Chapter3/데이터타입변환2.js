
// 문자열로 변환

// js의 모든 객체에는 문자열 표현을 반환하는 toString() 메서드가 있다.
// 사실 toString() 메서드를 사용할 일은 별로 많지 않다.
// 문자열 병합에서 자동으로 숫자를 문자열로 변환하기 때문에
// 숫자를 문자열로 직접 바꿀 일을 그리 많지 않다.
// 어떤 경우든 숫자를 문자열로 바꿔야 한다면, 
// toString() 메서드는 잘 동작하고 상식적인 결과를 반환한다.

const n = 33.5;
n;  // 33.5 - 숫자
const s = n.toString();
s;  // "33.5" - 문자열

// Date 객체의 toString() 메서드는 좀 길긴 하지만 쓸만한 결과를 반환한다.
// 하지만 대부분의 객체는 쓸모없는 문자열 "[object Object]"를 반환한다.
// 객체의 toString() 메서드를 수정해서 더 유용한 문자열 표현을 반환하게 할 수 있다.
// 한편, 배열의 toString() 메서드는 꽤 쓸만하다.
// 이 메서드는 각 요소를 문자열로 바꾼 다음 쉼표로 연결한 문자열을 반환한다.

const arr = [1, true, "hello"];
arr.toString();     // "1,true,hello"


// 불리언으로 변환

// 부정 연산자(!)를 써 모든 값을 불리언으로 바꿀 수 있다.
// 부정 연산자를 한번 사용하면 '참 같은 값'은 false로 바뀌고
// 부정 연산자를 두번 사용하면 true를 얻을 수 있다.
// 숫자형 형변환과 마찬가지로 Boolean 생성자를 써도 결과는 같다(여기서도 new 키워드는 사용하지 x).

const n = 0;
const b1 = !!n;
const b2 = Boolean(n);