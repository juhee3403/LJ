
// 배열

// 자바스크립트에서 배열은 특수한 객체
// 일반적인 객체와 달리 배열 콘텐츠에는 
// 항상 순서가 있고, 키는 숫자로 구성된다.

// 유용한 메서드를 많이 가진 대단히 강력한 데이터 타입이다.

// js배열에는 다음과 같은 특징이 있다.
    // 배열크기는 고정되지 않는다. 언제든 요소를 추가하거나 제거할 수 있다.
    // 요소의 데이터 타입을 가리지 않는다. 즉, 문자열만 쓸수 있는 배열이라던가 숫자만 쓸 수 있는 배열같은 개념이 아예 없다.
    // 배열 요소는 0으로 시작한다.

// 배열은 기능이 추가도니 특수한 객체이므로
// 배열에 숫자가 아닌 키나 분수, 음수등을 키로 쓸수 있다.
// 그렇지만, 이런 행동은 배열의 설계 목적과 어긋날 뿐 아니라 
// 혼란스러운 동작과 찾기 어려운 버그를 초래할 수 있으므로 피해야 한다.

// js의 배열 리터럴은 다음과 같이 대괄호[] 안에 배열 요소를 쉼표,로 구분하여 쓴다.
const a1 = [1,2,3,4];
const a2 = [1, 'two', 3, null];             // 여러 가지 타입으로 구성된 배열
const a3 = [                                // 여러 줄로 정의한 배열
    "What the hammer?",
    "In What Furnace",
    "What the anvil?",
    "Dare its deadly",
];
const a4 =[                                 // 객체가 들어있는 배열
    { name: "ruby", hardness: 9},
    { name: "Diamond", hardness: 10},
    { name: "Topaz", hardness: 8},
];
const a5 = [                                // 배열이 들어있는 배열
    [1,3,5],
    [2,4,6],
];

// 배열에는 요소 개수를 반환하는 length 프로퍼티가 있다.
const arr = ['a', 'b', 'c'];
arr.length;                                 // 3

// 배열 요소에 접근할 때는 대괄호 안에 요소의 인덱스 숫자를 쓴다.
arr[0];             // 첫번째 요소 가져오기      // 'a'
arr[arr.length - 1] // 마지막 요소 가져오기      // 'c'

// 배열 요소의 값을 덮어쓸 때는 새 값을 할당하면 된다.
arr[2] = 'z';                               // arr은 이제 ['a', 'b', 'z']


// 위의 예제 코드에서 객체와 배열 요소를 여러 행에 나눠 썼을 때
// 마지막에 쉼표가 있는 것을 눈치챘을 것이다.
// (이런 마지막 쉼표를 trailing comma, dangling comma, terminal comma 등으로 부른다)
const arr = [
    "One",
    "Two",
    "Three",
];

const obj = {
    one: 1,
    two: 2,
    three: 3,
};
// js 문법에서는 마지막 쉼표를 계속 허용했었지만, 
// 인터넷 익스플로러 초기 버전은 마지막 쉼표를 쓰면 에러를 내어 쓰지 않는 프로그래머가 많다.
// 필자는 배열과 객체에서 잘라내고 붙여넣는 일이 많고, 
// 객체 마지막에 프로퍼티를 추가하는 일이 많으므로
// 마지막에 쉼표를 항상 사용한다.
// 즉, 필자의 상식으로는, 배열과 객체 리터럴의 마지막에는 항상 쉼표가 있다.
// 마지막 쉼표를 쓰느냐 마느냐 하는 논쟁이 늘 있지만,
// 필자는 마지막 쉼표를 선호한다.
// 여러분이 마지막 쉼표를 썼을 때 문제가 생긴다고 느끼거나, 
// 팀의 스타일 가이드에서 마지막 쉼표를 쓰지 않도록 정했다면 
// 필자의 의견은 잊고 마지막 쉼표를 쓰지 마라.

// 널리 사용되는 js 객체 표기법(JSON)에서는 마지막 쉼표를 허용하지 않는다.