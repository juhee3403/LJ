
// 표현식과 흐름 데어 패턴

// 4장에서 널리 쓰이는 제어문 패턴 몇 가지를 알아보았다.
// 이제 제어문에 영향을 끼칠 수 있는 표현식인 3항 연산자와 단축 평가에 대해 배웠으니
// 제어문 패턴을 더 알아보자.


// if...else 문을 3항 연산자로 바꾸기

// if...else 문의 목적이 변수의 값을 얻는 것이라면(할당인든, 표현식의 일부분이든, 함수의 반환값이든)
// 일반적으로 if...else 대신 3항 연산자를 쓰는 편이 좋다.
// 3항 연산자를 쓰면 코드가 간단해지고 읽기 쉽다.
if (isPrime(n)) {
    label = 'prime';
} else {
    label = 'non-prime';
}
// 위 코드를 다음과 같이 바꾸자
label = isPrime(n) ? 'prime' : 'non-prime';


// if 문을 단축 평가하는 OR 표현식으로 바꾸기

// 할당이 주 목적인 if 문은 단축 평가를 사용하는 OR 표현식을 써서 간결하게 줄일 수 있다.
// 3항 연산자는 if...else 문보다 거의 항상 더 좋지만, 
// 단축 평가는 뚜렷하게 무엇이 좋다고 말하기 어렵다.
// 하지만 매우 자주 사용하는 패턴이니 알아두는 편이 좋다.

if(!options) options = {};
// 위 코드를 다음과 같이 쓸 수 있다.
options = options || {};

