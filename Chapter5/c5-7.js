
// 논리 연산자

// 우리가 익숙한 산술 연산자는 무한히 많은 숫자를 다룰수 있지만(컴퓨터의 메모리는 유한하므로 정확히 말한다면 아~주 많은),
// 논리 연산자는 불리언 값만 다룰 수 있으며 불리언에는 false와 true 두 가지 밖에 없다.

// 수학에서, 그리고 대부분의 프로그래밍 언어에서 
// 논리 연산자는 불리언 값에서만 동작하며 불리언 값만 반환한다.
// 반면, js의 논리 연산자는 불리언이 아닌 값도 다룰수 있고, 
// 놀랍게도 불리언이 아닌 값을 반환하기도 한다.
// js의 논리 연산자가 잘못 만들어져 있거나 엉성한 것은 아니다.
// 논리 연산자를 불리언 값에 사용하면 결과는 불리언 값뿐이다.

// 연산자에 대해 설명하기 전에 
// js가 불리언이 아닌 값을 
// 불리언 값으로 바꾸는 방법에 익숙해져야 한다.


// 참 같은 값과 거짓 같은 값
// '참 같은 값'과 '거짓 같은 값'이란 개념이 있는 언어도 많고,
// C 언어 처럼 불리언 타입이 아예 존재하지 않는 언어도 있다.
// C 언어에서 숫자 0은 false이고 다른 숫자형 값은 모두 true이다.
// js는 이들을 적절히 혼합한 방식을 취한다.
// js에서는 모든 데이터 타입을 '참 같은 값'과 '거짓 같은 값'으로 나눌 수 있다.
// js에서 '거짓 같은 값'은 다음과 같다.
    // undefined
    // null
    // false
    // 0
    // NaN
    // '' (빈 문자열)

// 이들 외에는 모두 '참 같은 값'이다.
// '참 같은 값'은 정말 많으므로 전부 나열할 수 없지만 몇 가지는 염두에 두어야 한다.
    // 모든 객체. valueOf() 메서드를 호출했을 때 false를 반환하는 객체도 '참 같은 값'에 속한다.
    // 배열. 빈 배열도 '참 같은 값'에 속한다.
    // 공백만 있는 문자열 (" "등)
    // 문자열 "false"
// 문자열 "false"가 true라는 사실에 놀라는 사람들이 있지만,
// 이를 제외하면 대부분 직관적으로 이해할 수 있고 기억하기도 쉬운 편이다.
// 한 가지 예외를 더 들자면 빈 배열이 참 같은 값이라는 사실이다.
// 빈 배열 arr이 '거짓 같은 값'으로 평가되길 원한다면 arr.length를 쓰자.
// 빈 배열에서 이 프로퍼티를 호출하면 0을 반환하며 이는 '거짓 같은 값'이다.
